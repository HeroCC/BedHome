plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
  id 'net.darkhax.curseforgegradle' version '1.1.15'
}

String packagePath = 'org.minecast.bedhome'
group packagePath
version = '2.34'

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
  mavenCentral()
  maven { url "https://hub.spigotmc.org/nexus/content/groups/public" }
  //maven { url "http://repo.gravitydevelopment.net" }
  maven { url "https://nexus.hc.to/content/repositories/pub_releases" }
  maven { url "https://jitpack.io" }
  maven { url 'https://repo.codemc.org/repository/maven-public' }
  maven { url 'https://papermc.io/repo/repository/maven-public/'}
}

dependencies {
  compileOnly 'org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT'
  implementation 'net.milkbowl.vault:VaultAPI:1.6'
  implementation 'org.bstats:bstats-bukkit:1.7'
  implementation 'com.github.HeroiCraft:Updater:c026fb8004'
  implementation "io.papermc:paperlib:1.0.5"
}

artifacts { // task 'build' runs generates uberjar
  archives shadowJar
}

jar {
  archiveClassifier.set('min') // we want the Uberjar to be distributed, this is the minified version
}

shadowJar {
  dependencies {
    include dependency('com.github.HeroiCraft:Updater')
    include dependency('org.bstats:bstats-bukkit')
    include dependency('io.papermc:paperlib')
    include dependency('net.milkbowl.vault:VaultAPI')
  }
  dependencies {
    relocate('org.bstats.bukkit', packagePath + '.dependencies.bstats')
    relocate('io.papermc.lib', packagePath + '.dependencies.paperlib')
    relocate('net.gravitydevelopment.updater', packagePath + '.dependencies.updater')
    relocate('net.milkbowl.vault', packagePath + '.dependencies.vault')
  }
  archiveClassifier.set(null)
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

ext {
  resourceTokens = [
      'Version': version
  ]
}

processResources {
  filter org.apache.tools.ant.filters.ReplaceTokens, tokens: resourceTokens
}

tasks.named('wrapper') {
  distributionType = Wrapper.DistributionType.BIN
  gradleVersion = '8.2'
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
  group "publishing"
  apiToken = findProperty('curseforge_token')
  disableVersionDetection()

  // Tells CurseForgeGradle to publish the output of the jar task. This will
  // return a UploadArtifact object that can be used to further configure the
  // file. 
  def mainFile = upload(findProperty('curseforge_project') ?: 893835, shadowJar)
  mainFile.changelog = 'The changelog string for this file.'
  mainFile.addJavaVersion("Java 8")
  mainFile.addGameVersion(7105)
}
